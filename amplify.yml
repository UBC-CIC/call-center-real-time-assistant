version: 1
backend:
  phases:
    preBuild:
      - export BASE_PATH=$(pwd)
      - yum install -y gcc openssl-devel bzip2-devel libffi-devel python3.8-pip
      - cd /opt && wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz
      - cd /opt && tar xzf Python-3.8.2.tgz
      - cd /opt/Python-3.8.2 && ./configure --enable-optimizations
      - cd /opt/Python-3.8.2 && make altinstall
      - pip3.8 install --user pipenv
      - ln -fs /usr/local/bin/python3.8 /usr/bin/python3
      - ln -fs /usr/local/bin/pip3.8 /usr/bin/pip3
      - cd $BASE_PATH
    build:
      commands:
        - '# Execute Amplify CLI with the helper script'
        - amplifyPush --simple
frontend:
  phases:
    preBuild:
      commands:
        - yarn install
    build:
      commands:
        - yum install jq -y
        - export AUTH_POLICY_ARN=$(aws iam list-policies --query 'Policies[?PolicyName==`IDPAuthRolePolicy`].{ARN:Arn}' --output text)
        - if [ ${#AUTH_POLICY_ARN} == 0 ]; then aws iam create-policy --policy-name IDPAuthRolePolicy --policy-document file://src/IDPAuthPolicy.json && export AUTH_POLICY_ARN=$(aws iam list-policies --query 'Policies[?PolicyName==`IDPAuthRolePolicy`].{ARN:Arn}' --output text); fi
        - export IDENTITY_POOL_ROLE=$(amplify env get --name dev --json | jq .awscloudformation.AuthRoleName -r)
        - aws iam attach-role-policy --role-name ${IDENTITY_POOL_ROLE} --policy-arn ${AUTH_POLICY_ARN}
        - yarn run build

  artifacts:
    baseDirectory: build
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
